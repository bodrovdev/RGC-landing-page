/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clearAllBodyScrollLocks\": () => (/* binding */ clearAllBodyScrollLocks),\n/* harmony export */   \"disableBodyScroll\": () => (/* binding */ disableBodyScroll),\n/* harmony export */   \"enableBodyScroll\": () => (/* binding */ enableBodyScroll)\n/* harmony export */ });\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n} // Older browsers don't support event options, feature detect it.\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\n\nvar hasPassiveEvents = false;\n\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPosition = void 0;\nvar previousBodyPaddingRight = void 0; // returns true if `el` should be allowed to receive touchmove events.\n\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event; // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n\n  if (allowTouchMove(e.target)) {\n    return true;\n  } // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n\n\n  if (e.touches.length > 1) return true;\n  if (e.preventDefault) e.preventDefault();\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      var computedBodyPaddingRight = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'), 10);\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = computedBodyPaddingRight + scrollBarGap + 'px';\n    }\n  } // If previousBodyOverflowSetting is already set, don't set it again.\n\n\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight; // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting; // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\nvar setPositionFixed = function setPositionFixed() {\n  return window.requestAnimationFrame(function () {\n    // If previousBodyPosition is already set, don't set it again.\n    if (previousBodyPosition === undefined) {\n      previousBodyPosition = {\n        position: document.body.style.position,\n        top: document.body.style.top,\n        left: document.body.style.left\n      }; // Update the dom inside an animation frame \n\n      var _window = window,\n          scrollY = _window.scrollY,\n          scrollX = _window.scrollX,\n          innerHeight = _window.innerHeight;\n      document.body.style.position = 'fixed';\n      document.body.style.top = -scrollY;\n      document.body.style.left = -scrollX;\n      setTimeout(function () {\n        return window.requestAnimationFrame(function () {\n          // Attempt to check if the bottom bar appeared due to the position change\n          var bottomBarHeight = innerHeight - window.innerHeight;\n\n          if (bottomBarHeight && scrollY >= innerHeight) {\n            // Move the content further up so that the bottom bar doesn't hide it\n            document.body.style.top = -(scrollY + bottomBarHeight);\n          }\n        });\n      }, 300);\n    }\n  });\n};\n\nvar restorePositionSetting = function restorePositionSetting() {\n  if (previousBodyPosition !== undefined) {\n    // Convert the position from \"px\" to Int\n    var y = -parseInt(document.body.style.top, 10);\n    var x = -parseInt(document.body.style.left, 10); // Restore styles\n\n    document.body.style.position = previousBodyPosition.position;\n    document.body.style.top = previousBodyPosition.top;\n    document.body.style.left = previousBodyPosition.left; // Restore scroll\n\n    window.scrollTo(x, y);\n    previousBodyPosition = undefined;\n  }\n}; // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\n\n\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nvar disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  } // disableBodyScroll must not have been called on this targetElement before\n\n\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    setPositionFixed();\n  } else {\n    setOverflowHidden(options);\n  }\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = true;\n    }\n  }\n};\nvar clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = false;\n    } // Reset initial clientY.\n\n\n    initialClientY = -1;\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\nvar enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = false;\n    }\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n};\n\n//# sourceURL=webpack://gulp-starter/./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js?");

/***/ }),

/***/ "./node_modules/when-in-viewport/src/whenInViewport.js":
/*!*************************************************************!*\
  !*** ./node_modules/when-in-viewport/src/whenInViewport.js ***!
  \*************************************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n  /* istanbul ignore next */\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this, function () {\n  var windowHeight;\n  var scrollOffset;\n\n  function WhenInViewport(element, callback, options) {\n    events.setup();\n    this.registryItem = registry.addItem(element, typeof callback === 'function' ? assign(options || {}, {\n      callback: callback\n    }) : callback);\n    registry.processItem(this.registryItem);\n  }\n\n  WhenInViewport.prototype.stopListening = function () {\n    registry.removeItem(this.registryItem);\n    events.removeIfStoreEmpty();\n  };\n\n  WhenInViewport.defaults = {\n    threshold: 0,\n    context: null\n  };\n  assign(WhenInViewport, {\n    setRateLimiter: function (rateLimiter, rateLimitDelay) {\n      events.rateLimiter = rateLimiter;\n\n      if (rateLimitDelay) {\n        events.rateLimitDelay = rateLimitDelay;\n      }\n\n      return this;\n    },\n    checkAll: function () {\n      scrollOffset = getWindowScrollOffset();\n      windowHeight = getWindowHeight();\n      registry.adjustPositions(registry.processItem);\n      events.removeIfStoreEmpty();\n      return this;\n    },\n    destroy: function () {\n      registry.store = {};\n      events.remove();\n      delete events.scrollHandler;\n      delete events.resizeHandler;\n      return this;\n    },\n    registerAsJqueryPlugin: function ($) {\n      $.fn.whenInViewport = function (options, moreOptions) {\n        var pluginOptions;\n\n        var callbackProxy = function (callback) {\n          return function (el) {\n            callback.call(this, $(el));\n          };\n        };\n\n        if (typeof options === 'function') {\n          pluginOptions = $.extend({}, moreOptions, {\n            callback: callbackProxy(options)\n          });\n        } else {\n          pluginOptions = $.extend(options, {\n            callback: callbackProxy(options.callback)\n          });\n        }\n\n        return this.each(function () {\n          if (pluginOptions.setupOnce) {\n            !$.data(this, 'whenInViewport') && $.data(this, 'whenInViewport', new WhenInViewport(this, pluginOptions));\n          } else {\n            $.data(this, 'whenInViewport', new WhenInViewport(this, pluginOptions));\n          }\n        });\n      };\n\n      return this;\n    }\n  });\n\n  function getWindowHeight() {\n    /* istanbul ignore next */\n    return 'innerHeight' in window ? window.innerHeight : document.documentElement.offsetHeight;\n  }\n\n  function getWindowScrollOffset() {\n    /* istanbul ignore next */\n    return 'pageYOffset' in window ? window.pageYOffset : document.documentElement.scrollTop || document.body.scrollTop;\n  }\n\n  function getElementOffset(element) {\n    return element.getBoundingClientRect().top + getWindowScrollOffset();\n  }\n\n  function iterate(obj, callback, context) {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (callback.call(context, obj[key], key) === false) {\n          break;\n        }\n      }\n    }\n  }\n\n  function assign(out) {\n    for (var i = 1; i < arguments.length; i++) {\n      iterate(arguments[i], function (obj, key) {\n        out[key] = obj;\n      });\n    }\n\n    return out;\n  }\n\n  var registry = {\n    store: {},\n    counter: 0,\n    addItem: function (element, options) {\n      var storeKey = 'whenInViewport' + ++this.counter;\n      var item = assign({}, WhenInViewport.defaults, options, {\n        storeKey: storeKey,\n        element: element,\n        topOffset: getElementOffset(element)\n      });\n      return this.store[storeKey] = item;\n    },\n    adjustPositions: function (callback) {\n      iterate(this.store, function (storeItem) {\n        storeItem.topOffset = getElementOffset(storeItem.element);\n        callback && callback.call(registry, storeItem);\n      });\n    },\n    processAll: function () {\n      iterate(this.store, this.processItem, this);\n    },\n    processItem: function (item) {\n      if (scrollOffset + windowHeight >= item.topOffset - item.threshold) {\n        this.removeItem(item);\n        item.callback.call(item.context || window, item.element);\n      }\n    },\n    removeItem: function (registryItem) {\n      delete this.store[registryItem.storeKey];\n    },\n    isEmpty: function () {\n      var isEmpty = true;\n      iterate(this.store, function () {\n        return isEmpty = false;\n      });\n      return isEmpty;\n    }\n  };\n  var events = {\n    setuped: false,\n    rateLimiter: function (callback, timeout) {\n      return callback;\n    },\n    rateLimitDelay: 100,\n    on: function (eventName, callback) {\n      /* istanbul ignore next */\n      if (window.addEventListener) {\n        window.addEventListener(eventName, callback, false);\n      } else if (window.attachEvent) {\n        window.attachEvent(eventName, callback);\n      }\n\n      return this;\n    },\n    off: function (eventName, callback) {\n      /* istanbul ignore next */\n      if (window.removeEventListener) {\n        window.removeEventListener(eventName, callback, false);\n      } else if (window.detachEvent) {\n        window.detachEvent('on' + eventName, callback);\n      }\n\n      return this;\n    },\n    setup: function () {\n      var self = this;\n\n      if (!this.setuped) {\n        scrollOffset = getWindowScrollOffset();\n        windowHeight = getWindowHeight();\n        this.scrollHandler = this.scrollHandler || this.rateLimiter(function () {\n          scrollOffset = getWindowScrollOffset();\n          registry.processAll();\n          self.removeIfStoreEmpty();\n        }, this.rateLimitDelay);\n        this.resizeHandler = this.resizeHandler || this.rateLimiter(function () {\n          windowHeight = getWindowHeight();\n          registry.adjustPositions(registry.processItem);\n          self.removeIfStoreEmpty();\n        }, this.rateLimitDelay);\n        this.on('scroll', this.scrollHandler).on('resize', this.resizeHandler);\n        this.setuped = true;\n      }\n    },\n    removeIfStoreEmpty: function () {\n      registry.isEmpty() && this.remove();\n    },\n    remove: function () {\n      if (this.setuped) {\n        this.off('scroll', this.scrollHandler).off('resize', this.resizeHandler);\n        this.setuped = false;\n      }\n    }\n  };\n\n  if (typeof window !== 'undefined') {\n    var $ = window.jQuery || window.$;\n    $ && WhenInViewport.registerAsJqueryPlugin($);\n  }\n\n  return WhenInViewport;\n});\n\n//# sourceURL=webpack://gulp-starter/./node_modules/when-in-viewport/src/whenInViewport.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var body_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! body-scroll-lock */ \"./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js\");\n/* harmony import */ var when_in_viewport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! when-in-viewport */ \"./node_modules/when-in-viewport/src/whenInViewport.js\");\n/* harmony import */ var when_in_viewport__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(when_in_viewport__WEBPACK_IMPORTED_MODULE_1__);\n\n // --- Мобильное меню\n\nlet burger = document.getElementById('burger');\nlet mobile_menu = document.getElementById('mobile_menu');\nlet nav_list = document.querySelector('.main-nav__nav-list'); // - Открытие по по клику на бургер\n\nburger.addEventListener('click', () => {\n  burger.classList.toggle('main-nav__burger--active');\n  mobile_menu.classList.toggle('main-nav__nav-menu--mobile--active');\n\n  if (burger.classList.contains('main-nav__burger--active')) {\n    (0,body_scroll_lock__WEBPACK_IMPORTED_MODULE_0__.disableBodyScroll)(mobile_menu);\n  } else {\n    (0,body_scroll_lock__WEBPACK_IMPORTED_MODULE_0__.enableBodyScroll)(mobile_menu);\n  }\n}); // - Закрытие по клику на пункт меню\n\nnav_list.onclick = function (event) {\n  let target = event.target;\n  if (target.tagName != 'a') return;\n  burger.classList.toggle('main-nav__burger--active');\n  mobile_menu.classList.toggle('main-nav__nav-menu--mobile--active');\n\n  if (mobile_menu.classList.contains('main-nav__nav-menu--mobile--active')) {\n    (0,body_scroll_lock__WEBPACK_IMPORTED_MODULE_0__.enableBodyScroll)(mobile_menu);\n  }\n}; // --- Поочерёдное появление графических элементов в блоке помощи\n\n\nwindow.addEventListener('load', () => {\n  let allChecks = document.querySelectorAll('.help__graphic-icon');\n\n  function timeOutFunction(value, time) {\n    setTimeout(() => {\n      value.classList.add('check-icon');\n    }, time * 1000);\n  }\n\n  when_in_viewport__WEBPACK_IMPORTED_MODULE_1___default()(document.querySelector('.help__wrapper-item'), () => {\n    Array.from(allChecks).map((item, index) => timeOutFunction(item, index));\n  });\n});\n\n//# sourceURL=webpack://gulp-starter/./src/js/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/index.js");
/******/ 	
/******/ })()
;